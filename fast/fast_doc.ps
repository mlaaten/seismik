%!PS-Adobe-3.0
%%Title: (Microsoft Word - fast_doc)
%%Creator: (Microsoft Word: LaserWriter 8 8.3.3)
%%CreationDate: (12:13 Friday, October 30, 1998)
%%For: (Colin A. Zelt)
%%Pages: 17
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier
%%DocumentNeededFonts: Times-Roman Times-Bold Times-Italic Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 31 31 583 761
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Microsoft Word - fast_doc)def
/Creator(Microsoft Word: LaserWriter 8 8.3.3)def
/CreationDate(12:13 Friday, October 30, 1998)def
/For(Colin A. Zelt)def
/Pages 17 def
end def end
/md 175 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 83 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/:rg{/DeviceRGB :ss}bd
/:sc{$cs :ss}bd
/:dc{/$cs xdf}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
/$cs Z
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageSize LetterSmall

    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
%%EndFeature
}featurecleanup
(Colin A. Zelt)setjob
/mT[1 0 0 -1 31 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
/f0_1/Times-Roman
:mre
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f1_1/Times-Bold
:mre
/f1_24 f1_1 24 scf
/f1_16 f1_1 16 scf
/f1_14 f1_1 14 scf
/f1_10 f1_1 10 scf
/f2_1 f1_1
:v def
/f3_1 f0_1
:v def
/f4_1/Times-Italic
:mre
/f4_10 f4_1 10 scf
/f5_1/Courier
:mre
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 1 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(1)S
gR
gS 0 0 552 730 rC
238 41 :M
f1_24 sf
4.76 .476( FAST)J
86 75 :M
f1_16 sf
-.09(Program package for )A
234 75 :M
(F)S
244 75 :M
-.273(irst )A
270 75 :M
(A)S
234 77 10 1 rF
281 75 :M
-.182(rrival )A
323 75 :M
(S)S
270 77 11 1 rF
333 75 :M
-.44(eismic )A
377 75 :M
(T)S
323 77 10 1 rF
387 75 :M
-.152(omography)A
377 77 10 1 rF
235 100 :M
f0_12 sf
-.117(30 October 1998)A
41 124 :M
-.182(Written by Colin Zelt)A
401 124 :M
(\(713\) 527-4757)S
41 136 :M
-.056(Rice University, Department of Geology & Geophysics, MS-126)A
401 136 :M
-.015(\(713\) 285-5214 \(fax\))A
41 148 :M
.175 .017(6100 Main St, P.O. Box 1892)J
401 148 :M
-.154(czelt@rice.edu)A
41 160 :M
.329 .033(Houston, TX 77251-1892)J
221 160 :M
-.143(http://zephyr.rice.edu/department/faculty/zelt/fast.html)A
216 0 10 730 rC
216 187 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
221 187 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
216 187 :M
f1_14 sf
14 f2_1 :p
117.999 :m
3.186 .319(Table of Contents)J
389 0 7 730 rC
389 199 :M
f0_12 sf
12 f3_1 :p
6 :m
(  )S
393 199 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
389 199 :M
f0_12 sf
12 f3_1 :p
23 :m
-.108(Page)A
407 0 5 730 rC
407 199 :M
3 :m
( )S
409 199 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
164 211 :M
f0_12 sf
-.187(Overview)A
398 211 :M
(1)S
164 223 :M
-.23(Directories)A
398 223 :M
(2)S
164 235 :M
-.129(Description of miscellaneous codes)A
398 235 :M
(2)S
164 247 :M
-.119(Compiling codes)A
398 247 :M
(3)S
164 259 :M
-.166(2D models)A
398 259 :M
(3)S
164 271 :M
-.119(File formats)A
398 271 :M
(3)S
164 283 :M
-.24(Active files)A
398 283 :M
(4)S
164 295 :M
-.164(Special files)A
398 295 :M
(5)S
164 307 :M
-.098(Input files)A
398 307 :M
(7)S
161 319 :M
-.05(Response files)A
395 319 :M
(12)S
161 331 :M
-.182(Example directories)A
395 331 :M
(13)S
161 343 :M
-.155(Creating 3D models)A
395 343 :M
(14)S
161 355 :M
-.061(Tips on running an inversion)A
395 355 :M
(14)S
161 367 :M
-.096(Plotting models with GMT scripts)A
395 367 :M
(15)S
161 379 :M
-.118(Plotting models and other files with zslice)A
395 379 :M
(15)S
161 391 :M
-.151(Where to start)A
395 391 :M
(16)S
161 403 :M
(Known problems)S
395 403 :M
(17)S
41 0 11 730 rC
41 430 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
47 430 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 430 :M
f1_14 sf
14 f2_1 :p
64 :m
.925(Overview)A
41 454 :M
f0_12 sf
-.114(This program package is for 2D and 3D first arrival traveltime tomography.  The models are)A
41 466 :M
-.104(parameterized on a uniform square grid \(velocities specified at equal node spacing in the x,y,z)A
41 478 :M
-.101(directions\).  The inverse grid is cell-based with constant cell size in each direction, but the sizes)A
41 490 :M
-.061(may be different in the x,y,z directions.  The node spacing used for the forward grid must divide)A
41 502 :M
-.087(equally into the x,y,z lengths of the model, and the cell size of the inverse grid must also divide)A
41 514 :M
-.093(equally into the x,y,z lengths of the model. The forward calculation of traveltimes and raypaths)A
41 526 :M
-.11(uses the Vidale \(1988, 1990\) scheme modified to handle large velocity contrasts according to the)A
41 538 :M
-.079(method of Hole and Zelt \(1995\). Sources and receivers may be anywhere in the model, although)A
41 550 :M
-.105(padding the model with at least a few nodes all around is a good idea to avoid having rays hit the)A
41 562 :M
-.093(edge of the model \(and terminate\).  A point source is assumed.  The tomographic method is)A
41 574 :M
-.109(regularized inversion incorporating a user-specified combination of smallest, flattest and smoothest)A
41 586 :M
-.093(perturbation constraints, the weights of each being allowed to vary with depth.  The regularization)A
41 598 :M
-.131(is a jumping method in that the constraints are applied to the model perturbation with respect to a)A
41 610 :M
-.116(background model \(usually the starting model\). A starting model and iterative approach is)A
41 622 :M
-.109(employed in which new ray paths are calculated for each iteration. The sparse linear system of)A
41 634 :M
-.11(equations is solved using the LSQR variant of the conjugate gradient method described by Nolet)A
41 646 :M
-.107(\(1987\).  An interface may be specified above which the model is held fixed, to allow either a layer)A
41 658 :M
-.13(stripping procedure or the consideration of marine data in which the interface is the bathymetric)A
41 670 :M
-.117(surface.  The size of the velocity update at each iteration may be bounded according to user-)A
41 682 :M
-.101(specified limits.  The forward modeling and most aspects of the inverse algorithm are described in)A
41 694 :M
-.059(Zelt and Barton \(1998\).)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 2 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(2)S
gR
gS 0 0 552 730 rC
41 44 :M
f0_12 sf
-.089(The package also includes x-window graphics utilities for interactive plotting of ray paths, models,)A
41 56 :M
-.084(time files, interfaces, etc. and generation of postscript files \(the same graphics package used by)A
41 68 :M
-.103(rayinvr\).  All codes are written in fortran except for the lowest level x graphics libraries which are)A
41 80 :M
-.044(written in C.  The codes were developed on SPARC SUN workstations, but should be adaptable)A
41 92 :M
-.078(to any platform with fortran and C compilers without too much effort.  It is not necessary to use)A
41 104 :M
-.11(the x graphics capabilities to compile or run the codes or create the postscript files.)A
41 0 7 730 rC
41 129 :M
f0_10 sf
10 f3_1 :p
6 :m
.476 .048(  )J
45 129 :M
6 :m
.476 .048(  )J
gR
gS 0 0 552 730 rC
41 129 :M
f0_10 sf
10 f3_1 :p
45 :m
-.191(References )A
83 0 3 730 rC
83 129 :M
3 :m
.5 .05( )J
83 129 :M
6 :m
.476 .048(  )J
gR
gS 86 0 4 730 rC
86 129 :M
f0_10 sf
10 f3_1 :p
3 :m
.5 .05( )J
87 129 :M
6 :m
.476 .048(  )J
gR
gS 0 0 552 730 rC
86 129 :M
f0_10 sf
10 f3_1 :p
18 :m
-.358(cited)A
41 142 :M
.376 .038(Hole, )J
67 142 :M
.926 .093(J. )J
78 142 :M
.985 .099(A., )J
95 142 :M
-.313(and )A
112 142 :M
.275 .028(B. )J
125 142 :M
1.108 .111(C. )J
139 142 :M
.598 .06(Zelt, )J
162 142 :M
-.119(Three-dimensional )A
239 142 :M
-.203(finite-difference )A
304 142 :M
-.081(reflection )A
345 142 :M
-.044(travel )A
371 142 :M
.836 .084(times, )J
400 142 :M
f1_10 sf
4.32 .432(Geophys. )J
451 142 :M
2.5 .25(J. )J
465 142 :M
.701(Int.)A
f0_10 sf
.835 .083(, )J
491 142 :M
.167(121,)A
59 154 :M
.51 .051(427-434, 1995.)J
41 166 :M
.491 .049(Nolet, )J
70 166 :M
.985 .099(G., )J
88 166 :M
.494 .049(Seismic )J
125 166 :M
-.149(wave )A
150 166 :M
-.024(propagation )A
202 166 :M
-.313(and )A
220 166 :M
.3 .03(seismic )J
255 166 :M
.322 .032(tomography, )J
311 166 :M
.601 .06(in )J
324 166 :M
f4_10 sf
1.152 .115(Seismic )J
361 166 :M
.081(Tomography)A
f0_10 sf
.072 .007(, )J
420 166 :M
-.146(ed. )A
436 166 :M
.65 .065(G. )J
451 166 :M
.491 .049(Nolet, )J
481 166 :M
-.101(Reidel,)A
59 178 :M
(Dordecht, 1-24, 1987.)S
41 190 :M
1.161 .116(Vidale, J. E., Finite-difference calculation of traveltimes )J
f1_10 sf
1.231 .123(Bull. Seismol. Soc. Am.)J
f0_10 sf
1.179 .118(, 78, 2062-2076, 1988.)J
41 202 :M
.43 .043(Vidale, J. E., Finite-difference calculation of traveltimes in three dimensions, )J
f1_10 sf
.121(Geophysics)A
f0_10 sf
.347 .035(, 55, 521 -526, 1990.)J
41 214 :M
.598 .06(Zelt, )J
65 214 :M
1.151 .115(C.A. )J
90 214 :M
-.313(and )A
108 214 :M
1.201 .12(P. )J
122 214 :M
.926 .093(J. )J
134 214 :M
-.031(Barton, )A
168 214 :M
-.119(Three-dimensional )A
246 214 :M
.3 .03(seismic )J
281 214 :M
-.135(refraction )A
323 214 :M
.19 .019(tomography: )J
379 214 :M
.255 .026(A )J
391 214 :M
-.015(comparison )A
442 214 :M
.144 .014(of )J
455 214 :M
.387 .039(two )J
476 214 :M
-.147(methods)A
59 226 :M
.772 .077(applied to data from the Faeroe Basin, )J
f1_10 sf
1.064 .106(J. Geophys. Res.,)J
f0_10 sf
.99 .099( 103, 7187-7210, 1998.)J
41 0 11 730 rC
41 252 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
47 252 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 252 :M
f1_14 sf
14 f2_1 :p
75 :m
.894(Directories)A
110 0 6 730 rC
110 252 :M
5 :m
1.5 .15( )J
111 252 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 276 :M
f0_12 sf
(fd)S
149 276 :M
-.118(source code for finite difference eikonal solver)A
41 288 :M
-.16(ray)A
149 288 :M
-.137(source code for raypath and data kernel calculation)A
41 300 :M
-.22(misc)A
149 300 :M
-.104(miscellaneous source codes)A
41 312 :M
-.263(zslice)A
149 312 :M
-.108(source code for quick general purpose plotting of almost everything except)A
149 324 :M
-.059(raypaths; includes 3D data volumes as x, y, or z slices, plots of 2D data)A
149 336 :M
-.14(grids and interface/bathymetry files)A
41 348 :M
-.267(pltlib)A
149 348 :M
-.079(plot libraries for X-windows screen graphics and postscript file generation)A
149 360 :M
-.092(\(same as for rayinvr package\))A
41 372 :M
-.183(2d_example)A
149 372 :M
-.107(input files and output  files \(results\) for a 2D example)A
41 384 :M
-.183(3d_example)A
149 384 :M
-.107(input files and output  files \(results\) for a 3D example)A
41 0 11 730 rC
41 411 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
47 411 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 411 :M
f1_14 sf
14 f2_1 :p
270.999 :m
3.942 .394(Description of some miscellaneous codes)J
41 435 :M
f0_12 sf
-.108(Only the most important programs are described.  The others are similar and/or mostly simple)A
41 447 :M
-.116(utility programs and the purpose and I/O for each can be determined by looking at the source code)A
41 459 :M
-.098(and comments therein.)A
41 483 :M
-.22(anomaly)A
113 483 :M
-.147(add rectangular velocity anomalies to a 3D background model)A
41 495 :M
-.18(difference)A
113 495 :M
-.161(calculate the difference between two 3D data volumes)A
41 507 :M
-.162(difference2)A
113 507 :M
-.166(calculate the relative difference between two 3D data volumes; the output file)A
113 519 :M
-.007(\324diff.out\325 has values in percent*100, e.g. 5% would be stored in integer*2 as 500.)A
41 531 :M
-.236(gmtslice)A
113 531 :M
-.113(output slices of 3D data volume as xyz files for input to gmt plotting script)A
113 543 :M
-.127(yplot or zplot)A
41 555 :M
-.165(gmtslice_2d)A
113 555 :M
-.124(output slice of 2D data volume as xyz file for input to gmt plotting script yplot)A
41 567 :M
-.108(inverse)A
113 567 :M
-.113(calculate 3D slowness perturbation using regularized inversion)A
41 579 :M
-.072(inverse_2d)A
113 579 :M
-.113(calculate 2D slowness perturbation using regularized inversion)A
41 591 :M
.06(ray.par)A
113 591 :M
-.13(fortran parameter file that contains the dimensions for all the arrays for all the misc)A
113 603 :M
-.113(programs \(except inverse and inverse_2d have some of their parameter statements)A
113 615 :M
-.15(inside them\))A
41 627 :M
-.323(rec)A
113 627 :M
-.139(make a binary pick file with xyz geometry but all pick times set to zero)A
41 639 :M
-.204(rec_ascii)A
113 639 :M
-.145(convert a binary pick file to ascii)A
41 651 :M
-.144(rec_binary)A
113 651 :M
-.141(convert an ascii pick file to binary)A
41 663 :M
-.122(rec_noise)A
113 663 :M
-.099(add noise to pick files using a constant user-specified standard deviation)A
41 675 :M
-.108(rec_noise2)A
113 675 :M
-.11(add noise to pick files using the standard deviation in the 5th column of the pick)A
113 687 :M
-.098(files \(see section on file formats below\))A
41 699 :M
-.129(regrid)A
113 699 :M
-.142(regrid a 3D data volume from the inverse cell parameterization to the forward node)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 3 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(3)S
gR
gS 0 0 552 730 rC
113 32 :M
f0_12 sf
-.241(parameterization)A
41 44 :M
-.081(regrid_2d)A
113 44 :M
-.142(regrid a 2D data volume from the inverse cell parameterization to the forward node)A
113 56 :M
-.241(parameterization)A
41 68 :M
-.162(reset)A
113 68 :M
-.126(reset the velocities above an interface to those in the background model and those)A
113 80 :M
-.107(below according to specified velocity bounds)A
41 92 :M
-.19(velbuild)A
113 92 :M
-.123(build a 3D velocity model from a 1D velocity depth profile or from 1 or 2 rayinvr)A
113 104 :M
-.132(models)A
41 116 :M
-.326(vz)A
113 116 :M
-.135(output a velocity depth profile from a point within a 3D model)A
41 128 :M
-.141(xyz2bath)A
113 128 :M
-.153(create an interface \(or bathymetry\) file from an ascii xyz file)A
41 0 10 730 rC
41 155 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
46 155 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 155 :M
f1_14 sf
14 f2_1 :p
110 :m
4.519 .452(Compiling codes)J
41 179 :M
f0_12 sf
-.113(The major programs \(fd, ray and zslice\) each have make files in their directories and an \322x\323 or \322n\323)A
41 191 :M
-.077(is added to the front of their names depending on whether it is a X graphics program or a Non-)A
41 203 :M
-.1(graphics program.  Since fd is not a graphics program it is called nfd; ray can be made in either a)A
41 215 :M
-.086(graphics or non-graphics version called xray or nray; zslice is only a graphics program, called)A
41 227 :M
-.098(xzslice.  When compiling graphics programs, the makefiles should compile the relevant programs)A
41 239 :M
-.096(in the pltlib directory, but if not, they can be compiled manually before hand using f77 or cc.  All)A
41 251 :M
-.112(of the miscellaneous programs can be compiled with f77; using the highest possible optimization)A
41 263 :M
-.09(might help to obtain the best performance, especially for inverse and inverse_2d.)A
41 287 :M
-.101(Before making fd, ray and zslice and the misc programs, you\325ll need to edit the parameter files in)A
41 299 :M
-.065(each directory \(fd.par, ray.par or zslice.par\).  Inside each file you\325ll find the fortran parameter)A
41 311 :M
-.096(statements that define the array sizes according to the forward and inverse grid size, and a few)A
41 323 :M
-.038(other things.  The forward grid is node based and defined by nxmax, nymax, nzmax.  The inverse)A
41 335 :M
-.063(grid is cell based and defined by nximax, nyimax, nzimax.  Inside fd, you\325ll also have to edit)A
41 347 :M
-.082(fd.com depending on whether you\325re doing a 2D or 3D problem \(read comments inside file\).)A
41 359 :M
-.129(You\325ll also have to edit the parameter statements inside inverse and inverse_2d \(they appear 3 times)A
41 371 :M
-.102(in each\) depending on the number of picks and non-zero elements of the data kernel for your)A
41 383 :M
-.119(problem.  The latter can be determined after running \324ray\325 and looking inside the file)A
41 395 :M
-.102(\324nzero.kernel\325; the first entry is the number of non-zero elements of the data kernel \(the second)A
41 407 :M
-.105(entry is the total number of picks\).  Note that the number of non-zero elements of the data kernel)A
41 419 :M
-.097(can slightly increase with iteration as the ray paths change, probably by no more than a few)A
41 431 :M
-.044(percent.)A
41 455 :M
-.082(For unix users, simply type \324make nfd\325 or \324make xray\325 for example to make the programs that have)A
41 467 :M
-.114(makefiles.  You will need to edit the paths at the top of the makefiles according to where you want)A
41 479 :M
-.107(the executables to reside and where the pltlib directory resides.)A
41 0 8 730 rC
41 506 :M
f1_14 sf
5 :m
1.5 .15( )J
44 506 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 506 :M
f1_14 sf
14 f2_1 :p
70 :m
4.113 .411(2D models)J
41 530 :M
f0_12 sf
-.047(Set ny=1 and nyimax=1 for 2D problems. Also set i2d=1 inside the input file \324f.in\325.)A
41 0 9 730 rC
41 557 :M
f1_14 sf
5 :m
1.5 .15( )J
45 557 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 557 :M
f1_14 sf
14 f2_1 :p
82 :m
4.438 .444(File formats)J
41 581 :M
f0_12 sf
-.116(The model, interface, calculated time files, and pick files are all binary format \(in fortran use)A
41 593 :M
-.101(form=\324unformatted\325 in the open statement\).  The bit of fortran code to read a 3D model file with x,)A
41 605 :M
-.048(y, z node limits of nx, ny, nz into a 3-dimensional array vel is as follows:)A
41 629 :M
.503 .05(do k=1,nz)J
41 641 :M
.123 .012(     do j=1,ny)J
41 653 :M
.07 .007(          do i=1,nx)J
41 665 :M
.003 0(               read\(10\) vel\(i,j,k\))J
41 677 :M
-.082(enddo)A
41 701 :M
-.087(The array vel is integer*2 with the velocities in units of m/s. For a 2D model, use:)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 4 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(4)S
gR
gS 0 0 552 730 rC
41 44 :M
f0_12 sf
.503 .05(do k=1,nz)J
41 56 :M
.123 .012(     do i=1,nx)J
41 68 :M
-.024(          read\(10\) vel\(i,k\))A
41 80 :M
-.082(enddo)A
41 104 :M
-.173(An interface or bathymetry file are formatted similarly:)A
41 128 :M
.499 .05(do j=1,ny)J
41 140 :M
.123 .012(     do i=1,nx)J
41 152 :M
-.045(          read\(10\) inter\(i,j\))A
41 164 :M
-.082(enddo)A
41 188 :M
-.126(The array inter will be real*4  in units of meters. The traveltime pick files can be converted between)A
41 200 :M
-.105(ascii and binary formats using the utility programs rec_ascii and rec_binary.  One file is needed for)A
41 212 :M
-.131(each shot \(or each receiver if modeling the data from receiver to shot as in the case of typical)A
41 224 :M
-.116(marine data which have many more shots than receivers\). An example of one file in ascii format is)A
41 236 :M
-.032(as follows:)A
41 261 :M
f5_12 sf
-.202(     1.000    12.000     1.250     0.000     0.000 -1)A
41 273 :M
-.202(     1.000     1.000     0.020     5.215     0.050  1)A
41 285 :M
-.202(     1.500     1.000     0.020     5.173     0.050  1)A
41 297 :M
-.202(     2.000     1.000     0.020     5.207     0.050  1)A
41 309 :M
-.202(     2.500     1.000     0.020     5.340     0.050  1)A
41 321 :M
-.202(     3.000     1.000     0.020     5.348     0.050  1)A
41 333 :M
-.202(     3.500     1.000     0.020     5.344     0.050  1)A
41 345 :M
-.202(     4.000     1.000     0.020     5.338     0.050  1)A
41 368 :M
f0_12 sf
-.071(The first line is the shot line and contains the x,y,z of the shot \(km\) followed by 2 dummy values)A
41 380 :M
-.091(of zero and -1.  The remaining lines each contain a single pick time using the format x,y,z of the)A
41 392 :M
-.068(receiver \(km\), the time \(unreduced in seconds\), the uncertainty \(s\), and a value of 1 \(for first)A
41 404 :M
-.049(arrivals\).  The fortran format used by the program \324rec_binary\323 to read such a file is \(5f10.3,i3\).)A
41 428 :M
-.105(The 3D or 2D time files are in the same format as the models, also in integer*2, but the units of the)A
41 440 :M
-.125(values are scaled according to the value of the parameter tmax in the \324f.in\325 input file for the)A
41 452 :M
.18 .018(program fd.)J
41 0 11 730 rC
41 479 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
47 479 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 479 :M
f1_14 sf
14 f2_1 :p
77 :m
5.391 .539(Active files)J
41 503 :M
f0_12 sf
-.099(All files for one problem should be in one directory.  Most files have specific names for input into)A
41 515 :M
-.081(the various programs:)A
41 539 :M
(vel.mod)S
113 539 :M
-.164(current velocity model \(archived and updated automatically\))A
41 551 :M
-.22(vel0)A
113 551 :M
-.165(starting velocity model)A
41 563 :M
.076(fd##.picks)A
113 563 :M
-.033(pick file for shot ## \(## can vary from 01 to 99\).  To use more than 99 shots,)A
113 575 :M
-.102(the codes will have to be edited in a few places.)A
41 587 :M
-.038(fd##.calc)A
113 587 :M
-.098(calculated pick file for shot ##.  This is when you calculate data for a known model)A
113 599 :M
-.088(for synthetic tests \(like the examples provided\).)A
41 611 :M
(rec.in)S
113 611 :M
-.159(a pick file with dummy times containing the receiver locations at which calculated)A
113 623 :M
-.081(times will be output \(if itimes=1 in the input file \324f.in\325 for the program fd\).)A
41 635 :M
.071(rec.##)A
113 635 :M
-.118(pick files for shot ## with dummy times containing the receiver locations at which)A
113 647 :M
-.104(calculated times will be output for shot ## \(if itimes=-1 in the input file \324f.in\325 for the)A
113 659 :M
.175 .017(program fd\).)J
41 671 :M
(fd##.times)S
113 671 :M
-.129(calculated time file for shot ##. These are the first arrival times at each node of the)A
113 683 :M
.32 .032(forward grid.)J
41 695 :M
-.183(bathymetry)A
113 695 :M
-.131(interface file used to fix the model above an interface.)A
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 5 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(5)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.22(vel#)A
113 32 :M
-.127(archived velocity model representing the best model from the # non-linear iteration.)A
113 44 :M
-.098(Do not confuse these files with those named vel.#; these are the models)A
113 56 :M
-.126(corresponding to each value of lambda tested for each non-linear iteration from)A
113 68 :M
-.092(which the best model \(vel#\) is selected.)A
41 80 :M
-.046(log.file)A
113 80 :M
-.124(the current log file; once archived for each non-linear iteration they are called log.#.)A
41 92 :M
.481 .048(f.in )J
113 92 :M
-.103(input parameters for fd)A
41 104 :M
.224(r.in)A
113 104 :M
-.113(input parameters for ray)A
41 116 :M
.111(i.in)A
113 116 :M
-.087(input parameters for inverse or inverse_2d)A
41 128 :M
.111(l.in)A
113 128 :M
-.129(input parameters for lambda2 or lambda3)A
41 140 :M
-.081(select.in)A
113 140 :M
-.129(input parameters for select2 or select3)A
41 152 :M
(reset.in)S
113 152 :M
-.117(input parameters for reset)A
41 164 :M
.333(s.in)A
113 164 :M
-.138(input parameters for zslice)A
41 176 :M
(sfile.in)S
113 176 :M
-.141(input parameters for zslice \(file specific parameters\))A
41 0 8 730 rC
41 203 :M
f1_14 sf
14 f2_1 :p
5 :m
1.5 .15( )J
44 203 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 203 :M
f1_14 sf
14 f2_1 :p
81 :m
4.832 .483(Special files)J
41 0 4 730 rC
41 227 :M
f0_12 sf
12 f3_1 :p
3 :m
( )S
42 227 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 227 :M
f0_12 sf
12 f3_1 :p
125 :m
-.037(for.header and inv.header:)A
41 251 :M
-.1(The size of the forward and inverse grids must be user specified inside special files called)A
41 263 :M
-.088(\324for.header\325 and \324inv.header\325 and each must reside in the directory in which the modeling and)A
41 275 :M
-.111(inversion is taking place.  Their format for the 3D example provided is:)A
41 299 :M
-.023(\324for.header\325:)A
41 312 :M
f5_12 sf
-.201(0.000  42.000  0.000  24.000  0.000  14.000  0.400  106   61    36)A
41 335 :M
f0_12 sf
-.052(\324inv.header\325:)A
41 348 :M
f5_12 sf
-.21(35      20      35)A
41 371 :M
f0_12 sf
-.137(Their format for the 2D example provided is:)A
41 395 :M
-.023(\324for.header\325:)A
41 408 :M
f5_12 sf
-.201(0.000  300.000  0.000   0.000   0.000  12.000  0.500   601  1  25)A
41 431 :M
f0_12 sf
-.052(\324inv.header\325:)A
41 444 :M
f5_12 sf
-.209(300       1      24)A
41 467 :M
f0_12 sf
.117 .012(The values in \324for.header\325 correspond to:  xmin,xmax,ymin,ymax,zmin,zmax,size,nx,ny,nz.)J
41 479 :M
-.115(These are the model limits \(km\) and number of nodes in each direction and \324size\325 is the node)A
41 491 :M
-.046(spacing \(km\). The values in \324inv.header\325 correspond to nxi,nyi,nzi.  These are the number of cells)A
41 503 :M
-.014(in the x,y,z directions.  The fortran format of \324for.header\325 is \(7f10.3,3i10\) and for \324inv.header\325 it)A
41 515 :M
.357 .036(is \(3i10\).)J
41 0 6 730 rC
41 539 :M
6 :m
(  )S
44 539 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 539 :M
f0_12 sf
12 f3_1 :p
39 :m
-.141(nowrite:)A
41 563 :M
-.111(Having a file called \324nowrite\325 in the working directory reduces the screen output to simply the)A
41 575 :M
-.074(name of each program and its purpose as it runs; otherwise, there will be more verbose output for)A
41 587 :M
-.015(some of the programs.)A
41 0 3 730 rC
41 611 :M
3 :m
( )S
41 611 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 611 :M
f0_12 sf
12 f3_1 :p
47 :m
-.11(inversion:)A
41 635 :M
-.119(The program run sequence is contained in a script file called \324inversion\325 in each example directory.)A
41 647 :M
-.067(Slight differences between the 2 script files are for two reasons:  \(1\) 2D versus 3D, and \(2\))A
41 659 :M
-.125(because the 3D example uses an interface \(bathymetry\) to fix the model above it, whereas the 2D)A
41 671 :M
-.107(example does not use an interface.  The scripts prompt the user at the beginning for the maximum)A
41 683 :M
-.113(number of non-linear iterations \(iterations at which the model is updated and new raypaths are)A
41 695 :M
-.151(calculated\) and the maximum number of lambda values to test for each non-linear iteration \(lambda)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 6 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(6)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.118(is the tradeoff parameter that controls the weighting of data misfit versus the constraint equations;)A
41 44 :M
-.076(see Zelt & Barton, 1998\).  For the two examples provided, use 5 for each value to replicate the)A
41 56 :M
-.113(results provided.  The path to the directory containing all the executables must be set near the top of)A
41 68 :M
-.078(the inversion script file.)A
41 92 :M
-.097(Specific programs to use for 2D and 3D problems:)A
41 116 :M
12 f3_1 :p
36 :m
(            )S
77 0 6 730 rC
77 116 :M
6 :m
(  )S
80 116 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
77 116 :M
f0_12 sf
12 f3_1 :p
14 :m
-.663(2D)A
83 0 8 730 rC
83 116 :M
6 :m
(  )S
88 116 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
91 116 :M
f0_12 sf
12 f3_1 :p
24 :m
(        )S
113 116 :M
36 :m
(            )S
149 116 :M
36 :m
(            )S
185 0 6 730 rC
185 116 :M
6 :m
(  )S
188 116 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
185 116 :M
f0_12 sf
12 f3_1 :p
14 :m
-.663(3D)A
191 0 8 730 rC
191 116 :M
6 :m
(  )S
196 116 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
199 116 :M
f0_12 sf
12 f3_1 :p
24 :m
(        )S
77 128 :M
-.072(inverse_2d)A
185 128 :M
-.108(inverse)A
77 140 :M
-.081(regrid_2d)A
185 140 :M
-.129(regrid)A
41 176 :M
-.097(Specific programs to use for problems with and without an interface:)A
41 200 :M
36 :m
(            )S
77 0 6 730 rC
77 200 :M
6 :m
(  )S
80 200 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
77 200 :M
f0_12 sf
12 f3_1 :p
55 :m
-.178(no interface)A
127 0 5 730 rC
127 200 :M
3 :m
( )S
129 200 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
132 200 :M
f0_12 sf
12 f3_1 :p
18 :m
(      )S
149 200 :M
36 :m
(            )S
185 0 3 730 rC
185 200 :M
3 :m
( )S
185 200 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
185 200 :M
f0_12 sf
12 f3_1 :p
40 :m
-.245(interface)A
220 0 5 730 rC
220 200 :M
3 :m
( )S
222 200 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
225 200 :M
f0_12 sf
12 f3_1 :p
33 :m
(           )S
185 212 :M
-.218(ireg)A
77 224 :M
-.22(lambda3)A
185 224 :M
-.22(lambda2)A
77 236 :M
-.067(istop2)A
185 236 :M
-.084(istop)A
77 248 :M
-.219(select3)A
185 248 :M
-.219(select2)A
185 260 :M
-.129(reset*)A
41 272 :M
-.095(* - you will need to use reset without an interface if you are imposing velocity bounds)A
41 0 3 730 rC
41 296 :M
3 :m
( )S
41 296 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 296 :M
f0_12 sf
12 f3_1 :p
37 :m
-.082(log.file:)A
41 320 :M
-.085(Most programs write to a log.file some important summary information, and the log file is used by)A
41 332 :M
-.127(the inversion script to determine the value of lambda to select at each iteration.  The log.file is)A
41 344 :M
-.141(automatically archived for each non-linear iteration into files called log.# where # is the iteration)A
41 356 :M
-.096(number.  Make sure the file log.file is empty before running \324inversion\325 \(this is done automatically)A
41 368 :M
-.083(in the \324inversion\325 script files provided\).  Note that the iteration number in the log.files assigns the)A
41 380 :M
-.117(first iteration to the current \(starting\) model for that iteration, and that the results \(misfit\) for the)A
41 392 :M
-.105(first lambda value tested actually corresponds to the second iteration.  This means for example, that)A
41 404 :M
-.119(testing 5 lambda values for each non-linear iteration will result in 6 iterations of results in the log)A
41 416 :M
-.113(files \(the current/starting model results/misfit plus the iterations for testing the lambda values\).)A
41 0 5 730 rC
41 440 :M
3 :m
( )S
43 440 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 440 :M
f0_12 sf
12 f3_1 :p
36 :m
.047(stop.in:)A
41 464 :M
-.121(This file is created and updated automatically by the inversion script and used to exit programs)A
41 476 :M
-.117(inside the inner loop over lambda under certain circumstances. The only time the user needs to deal)A
41 488 :M
-.087(with it is to run some of the codes outside of the inversion script, you will need to edit the file and)A
41 500 :M
-.098(set the value to \3220\323.)A
41 0 6 730 rC
41 524 :M
6 :m
(  )S
44 524 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 524 :M
f0_12 sf
12 f3_1 :p
62 :m
-.08(nzero.kernel:)A
41 548 :M
-.103(A small file created after running the program \324ray\325 with itomo=5.  The first entry is the number of)A
41 560 :M
-.112(non-zero elements of the data kernel and the second entry is the total number of data.)A
41 0 6 730 rC
41 584 :M
6 :m
(  )S
44 584 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 584 :M
f0_12 sf
12 f3_1 :p
72.999 :m
-.155(yplot and zplot:)A
41 608 :M
-.12(GMT script files to plot the models as vertical \(yplot\) and horizontal \(zplot\) slices as color)A
41 620 :M
-.096(postscript files; the latter plots perturbations with respect to a background model.  You must first)A
41 632 :M
-.079(run \324difference\325 and gmtslice \(gmtslice_2d for 2D problems\) using the response file \324gz.rsp\325 before)A
41 644 :M
-.132(running zplot.  You will use \324difference\325 to calculate the difference between a particular model and)A
41 656 :M
-.085(the background/starting model \(vel0\).  For \324yplot\325 you only need to run gmtslice \(gmtslice_2d for)A
41 668 :M
-.078(2D problems\) using the response file \324gy.rsp\325, but the model to be plotted must be called)A
41 680 :M
.113(\324vel.mod\325.)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 7 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(7)S
gR
gS 41 0 4 730 rC
41 32 :M
f0_12 sf
12 f3_1 :p
3 :m
( )S
42 32 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
12 f3_1 :p
52 :m
-.097(file.names:)A
41 56 :M
-.141(The names of the velocity model files for each value of lambda tested for each non-linear iteration)A
41 68 :M
-.106(are listed in order in this file.  For example, to test a maximum of 5 lambda values each non-linear)A
41 80 :M
-.06(iteration, there must be 5 file names, and it makes sense to call them \324vel.1\325, \324vel.2\325, etc.  Note that)A
41 92 :M
-.052(the names \324vel1\325, \324vel2\325, ... should not be used since these are the names of the archived velocity)A
41 104 :M
-.114(model files for the best model for each non-linear iteration.)A
41 0 6 730 rC
41 131 :M
f1_14 sf
14 f2_1 :p
5 :m
1.5 .15( )J
42 131 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 131 :M
f1_14 sf
14 f2_1 :p
69 :m
3.976 .398(Input files)J
41 155 :M
f0_12 sf
-.112(The traveltime data to be inverted are contained in the files fd##.picks \(see section on file formats\).)A
41 167 :M
-.101(Many of the programs that are run as part of the inversion script have parameter input files, all use)A
41 179 :M
-.118(the fortran namelist \(as for rayinvr\).  One convenient feature of the namelist is that the same)A
41 191 :M
-.124(parameter can be listed more than once, but the value actually assigned is for the last occurrence in)A
41 203 :M
-.126(the file.  After a description of the main input parameters for each file, an example file is included)A
41 215 :M
-.087(corresponding to the 3D example provided.  Some hints for assigning parameter values to perform)A
41 227 :M
-.056(common tasks are provided for some files.)A
41 0 4 730 rC
41 251 :M
12 f3_1 :p
3 :m
( )S
42 251 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 251 :M
f0_12 sf
12 f3_1 :p
130.999 :m
-.069(f.in: input parameters for fd)A
41 275 :M
-.118(1\) pltpar namelist: plotting and misc parameters \(plotting no longer supported\))A
41 299 :M
-.197(iwrite)A
109 299 :M
-.067(verbose screen output \(1\))A
41 311 :M
-.223(iout)A
109 311 :M
-.059(output time files \(1\), when running inversion script \(2\))A
41 323 :M
-.266(itimes)A
109 323 :M
-.127(output calculated pick files using same receivers for each shot specified in file)A
109 335 :M
-.087(\324rec.in\325 \(1\); output calculated pick files using receivers specified in rec.## for shot)A
109 347 :M
-.138(number ## \(-1\); output the RMS misfit between the calculated times and the data in)A
109 359 :M
-.007(the fd##.picks files \(2\). Must use istop=0 for itimes=1 or -1.)A
41 383 :M
-.128(2\) propar namelist: propagation parameters)A
46 407 :M
-.167(i2d)A
109 407 :M
-.051(run in 2D mode \(1\). This means the x-z plane with y=0.)A
46 419 :M
-.084(istop)A
109 419 :M
-.089(stop propagating from a source once the nodes surrounding all receivers have been)A
109 431 :M
-.096(timed \(1\).  This means the time files \(\324fd##.times\325\) may not be completely filled, but)A
109 443 :M
-.087(may have some zero times around the edges.)A
46 455 :M
-.331(tmax)A
109 455 :M
-.127(upper limit of the largest traveltime \(s\) to be expected for any shot at any point in the)A
109 467 :M
-.086(model.  This value should be as small as possible since it is used to scale the times)A
109 479 :M
-.108(stored in the \324fd##.times\325 in integer*2 format.  The calculated times will be)A
109 491 :M
-.111(multiplied by 32766/tmax before conversion to integer*2.  Making this value)A
109 503 :M
-.111(unnecessarily large will cause loss of precision in the times; making this value too)A
109 515 :M
-.127(small will corrupt the time files.  The program zslice can be used to plot the time files)A
109 527 :M
-.114(to determine the maximum times and whether corruption has occurred.)A
46 539 :M
-.105(reverse)A
113 539 :M
-.108(the side of the model at which reverse propagations will begin if headwave)A
109 551 :M
-.062(operators were used in the primary propagation \(1 - left or xmin, 2 - right or xmax,)A
109 563 :M
-.031(3 - back or ymin, 4 - front or ymax, 5 - top or zmin, 6 - bottom or zmax, 7 - let fd)A
109 575 :M
-.086(decide which side makes most sense\))A
46 587 :M
-.09(nreverse)A
109 587 :M
-.072(maximum number of reverse propagations \(0 will suppress reverse propagations\))A
46 599 :M
-.223(omin)A
113 599 :M
-.114(omit all picks with source-receiver offsets less than omin \(km\) when calculating the)A
109 611 :M
-.076(RMS misfit using itimes=2.  omin is an array corresponding to the shots listed in the)A
109 623 :M
-.099(srcpar namelist parameters.)A
41 647 :M
-.117(3\) srcpar namelist: source parameters)A
41 671 :M
-.108(isource)A
113 671 :M
-.05(an array to activate the shots listed in the arrays xsource, ysource, zsource. Use 0)A
109 683 :M
(or 1 to turn off or on a shot.)S
41 695 :M
-.052(xsource)A
109 695 :M
-.07(x locations of the shots \(km\))A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 8 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(8)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.045(ysource )A
109 32 :M
-.07(y locations of the shots \(km\))A
41 44 :M
-.091(zsource )A
109 44 :M
-.082(z locations of the shots \(km\))A
41 56 :M
-.245(inear)A
113 56 :M
-.1(use velocities specified in vabove and vbelow to assign velocities at the shots for)A
109 68 :M
-.067(nodes above and below the shot inside the 5x5x5 node box around the shot within)A
109 80 :M
-.086(which a straight approximation is made \(1\).)A
41 92 :M
-.13(vabove)A
113 92 :M
-.085(Array containing velocities \(km/s\) for each shot used when inear=1.)A
41 104 :M
-.054(vbelow )A
109 104 :M
-.085(Array containing velocities \(km/s\) for each shot used when inear=1.)A
41 129 :M
f5_10 sf
(&pltpar)S
41 141 :M
(       iwrite=0,)S
41 153 :M
(       iout=1, itimes=-1,)S
41 165 :M
(       iout=1, itimes=0,)S
41 177 :M
(       iout=2, itimes=2,)S
41 189 :M
(  &end)S
41 201 :M
(&propar)S
41 213 :M
(       i2d=0, istop=1, tmax=15.,)S
41 225 :M
(       reverse=6, nreverse=1,)S
41 237 :M
(       omin=9*3.0,)S
41 249 :M
(  &end)S
41 261 :M
(  &srcpar)S
41 273 :M
.005 .001(      inear=1, vabove=9*1.5, vbelow=9*1.6,)J
41 285 :M
(      isource=  9*1,)S
41 297 :M
.006 .001(      xsource=1.,21.,41.,1.,21.,41.,1.,21.,41.,)J
41 309 :M
.006 .001(      ysource=1.,1.,1.,12.,12.,12.,23.,23.,23.,)J
41 321 :M
(      zsource=9*1.25,)S
41 333 :M
(  &end)S
41 0 9 730 rC
41 356 :M
f0_12 sf
12 f3_1 :p
9 :m
(   )S
47 356 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 356 :M
f0_12 sf
12 f3_1 :p
25.998 :m
(Hints)S
62 0 5 730 rC
62 356 :M
3 :m
( )S
64 356 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
67 356 :M
f0_12 sf
-.109(: use the following parameter combinations for the tasks described:)A
41 380 :M
-.033(iout=1, itimes=-1)A
145 380 :M
-.114(- calculate pick files using receiver geometry in \324rec.##\325 files \(make sure)A
145 392 :M
-.014(istop=0\))A
41 404 :M
-.036(iout=1, itimes=0)A
145 404 :M
-.19(- calculate time files only)A
41 416 :M
-.036(iout=2, itimes=2)A
145 416 :M
-.054(- when running inversion script)A
41 0 4 730 rC
41 440 :M
12 f3_1 :p
3 :m
( )S
42 440 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 440 :M
f0_12 sf
12 f3_1 :p
135.999 :m
-.078(r.in: input parameters for ray)A
41 464 :M
-.147(1\) pltpar namelist: plotting and misc parameters)A
41 488 :M
-.162(iscreen)A
113 488 :M
-.067(verbose screen output \(1\))A
41 500 :M
-.247(ircol)A
113 500 :M
-.081(color of raypaths)A
41 512 :M
-.165(iscol)A
113 512 :M
-.068(color of source)A
41 524 :M
-.326(irec)A
113 524 :M
-.138(plot receiver locations \(1\))A
41 536 :M
-.273(ireccol)A
113 536 :M
-.114(color of receivers)A
41 548 :M
-.218(iray)A
113 548 :M
-.077(plot raypaths for all shots in one plot \(1\) or refresh screen after each shot \(2\))A
41 560 :M
-.165(istep)A
113 560 :M
-.113(plot one ray at time and wait for user to hit return before plotting next raypath \(1\))A
41 572 :M
-.25(itomo)A
113 572 :M
-.125(calculate ray hit counts for each cell \(1\) or data kernel for regularized inversion \(5\))A
41 584 :M
-.165(itrms)A
109 584 :M
-.178(calculate the RMS misfit between the calculated and picked times)A
41 596 :M
-.195(iwater)A
109 596 :M
-.138(calculate a second RMS misfit excluding all picks with raypaths that are above the)A
109 608 :M
-.136(interface specified in the file \324bathymetry\325.  For marine data this eliminates the water)A
109 620 :M
-.072(wave \(direct\) arrivals.)A
41 632 :M
-.25(iplot)A
109 632 :M
-.056(write the graphics to a postscript file \(0\), to the screen \(1\), or both \(2\))A
41 644 :M
1.02 .102(xwndow, ywndow)J
149 644 :M
-.073(size of graphics window \(mm\) in x and y directions)A
41 656 :M
-.196(ndecir)A
109 656 :M
-.116(decimation factor of raypaths \(for plotting only\))A
41 668 :M
(npskip)S
109 668 :M
-.108(decimation factor of points defining raypaths \(for plotting only\))A
41 680 :M
-.084(symht)A
109 680 :M
-.161(dot size \(mm\) of receiver location or traveltime)A
41 692 :M
(souht)S
109 692 :M
-.092(dot or box size \(mm\) for source location)A
41 704 :M
-.167(ixy)A
109 704 :M
-.112(plot raypaths projected into x-y plane \(1\))A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 9 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
503 713 6 12 rC
503 722 :M
f0_12 sf
(9)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.33(ixz)A
109 32 :M
-.115(plot raypaths projected into x-z plane if ixz=1 and iyz=0)A
41 44 :M
-.22(iyz )A
109 44 :M
-.115(plot raypaths projected into y-z plane if ixz=1 and iyz=1)A
41 56 :M
-.167(i3d)A
109 56 :M
-.109(plot a pseudo 3D perspective plot of the raypaths)A
41 68 :M
-.33(theta)A
109 68 :M
-.09(projection angle \(degrees\) used for plot if i3d=1)A
41 92 :M
-.144(2\) axepar namelist: axes parameters)A
41 116 :M
-.028(xmm, ymm, zmm)A
149 116 :M
-.151(length of model \(mm\) in each direction)A
41 128 :M
-.501(tmm)A
149 128 :M
-.144(length of time axis \(mm\) for plotting traveltimes)A
41 140 :M
-.151(ttmin, ttmax)A
149 140 :M
-.119(min and max value of time axis \(s\))A
41 152 :M
-.249(albht)A
149 152 :M
-.089(height of axes labels \(mm\); no effect on screen, only has effect in postscript)A
149 164 :M
-.329(file)A
41 188 :M
-.143(3\) raypar namelist: ray tracing parameters)A
41 212 :M
-.328(itrace)A
113 212 :M
-.099(array listing the shot numbers to trace rays)A
41 224 :M
-.331(tmax)A
113 224 :M
-.086(must be equal to same value of tmax used in \324f.in\325 file by program fd)A
41 236 :M
-.245(interface)A
109 236 :M
-.134(do not include portion of model above the interface specified in file \324bathymetry\325)A
109 248 :M
-.12(when calculating the data kernel matrix using itomo=5 \(i.e. model above interface)A
109 260 :M
-.106(will remain fixed during inversion\))A
41 284 :M
-.179(4\) ttpar namelist: traveltime plotting parameters)A
41 308 :M
-.416(itime)A
113 308 :M
-.114(plot observed and calculated traveltimes \(1\) or traveltime residuals \(2\); using -1 or -)A
109 320 :M
-.062(2 forces a fresh screen for each shot)A
41 332 :M
-.106(vred)A
109 332 :M
-.09(reducing velocity \(km/s\) if itime=1 or -1.)A
41 344 :M
-.266(itocol)A
109 344 :M
-.117(color of observed traveltimes)A
41 356 :M
-.331(itccol)A
109 356 :M
-.186(color of calculated traveltimes)A
41 368 :M
-.264(itrcol)A
109 368 :M
-.141(color of traveltime residuals)A
41 393 :M
f5_10 sf
(  &pltpar)S
41 405 :M
(          iscreen=0,)S
41 417 :M
.004 0(          ircol=2, iscol=-4, irec=0, ireccol=3,)J
41 429 :M
.003 0(          iray=2, itomo=0, itrms=0,)J
41 441 :M
.003 0(          iray=0, itomo=1, itrms=1,)J
41 453 :M
.003 0(          iray=0, itomo=5, itrms=1,)J
41 465 :M
(          iwater=1, istep=0,)S
41 477 :M
.004 0(          iplot=1, xwndow=292., ywndow=200.,)J
41 489 :M
.004 0(          ndecir=1, npskip=1, symht=1., souht=2.,)J
41 501 :M
.004 0(          ixz=1, ixy=1, iyz=1, i3d=0, theta=20.,)J
41 513 :M
(  &end)S
41 525 :M
(  &axepar)S
41 537 :M
.004 0(          xmm=220.0, ymm=137.5, zmm=40.0,)J
41 549 :M
.004 0(          ttmin=0., ttmax=5.0, ntickt=5,)J
41 561 :M
(          tmm=100., ndecit=1,)S
41 573 :M
.004 0(          iaxlab=1, xorig=15., albht=2.5,)J
41 585 :M
(  &end)S
41 597 :M
(  &raypar)S
41 609 :M
.003 0(          itrace= 1, 2, 3, 4, 5, 6, 7, 8, 9,)J
41 621 :M
(          tmax=15.,)S
41 633 :M
(          interface=1,)S
41 645 :M
(  &end)S
41 657 :M
(  &ttpar)S
41 669 :M
.004 0(          itime=0, vred=4.5, itccol=2, itocol=3, itrcol=2,)J
41 681 :M
(  &end)S
41 0 9 730 rC
41 704 :M
f0_12 sf
12 f3_1 :p
9 :m
(   )S
47 704 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 704 :M
f0_12 sf
12 f3_1 :p
25.998 :m
(Hints)S
62 0 5 730 rC
62 704 :M
3 :m
( )S
64 704 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
67 704 :M
f0_12 sf
-.109(: use the following parameter combinations for the tasks described:)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 10 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(10)S
gR
gS 0 0 552 730 rC
41 44 :M
f0_12 sf
.088 .009(iray=2, itomo=0, itrms=0)J
194 44 :M
-.071(- to plot ray paths \(use iray=1 to plot all rays for all shots on 1)A
194 56 :M
-.147(screen/page\))A
41 68 :M
.088 .009(iray=0, itomo=1, itrms=1)J
194 68 :M
-.168(- to calculate ray hit count for each cell)A
41 80 :M
.088 .009(iray=0, itomo=5, itrms=1)J
194 80 :M
-.054(- when running inversion script)A
41 0 3 730 rC
41 104 :M
12 f3_1 :p
3 :m
( )S
41 104 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 104 :M
f0_12 sf
12 f3_1 :p
223 :m
-.117(l.in: input parameters for lambda2 and lambda3)A
41 128 :M
-.22(lambda0)A
109 128 :M
-.15(initial lambda value to try for first non-linear iteration)A
41 140 :M
-.193(redfac)A
113 140 :M
-.132(reduce the tradeoff parameter lambda by this factor when testing lambda values)A
109 152 :M
-.064(inside the second loop of the inversion script.)A
41 177 :M
f5_10 sf
(  &lampar)S
41 189 :M
(     redfac=1.414214)S
41 201 :M
(     lambda0=20.)S
41 213 :M
(  &end)S
41 0 3 730 rC
41 236 :M
f0_12 sf
3 :m
( )S
41 236 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 236 :M
f0_12 sf
12 f3_1 :p
221.999 :m
-.076(i.in: input parameters for inverse or inverse_2d)A
41 260 :M
-.247(alpha)A
113 260 :M
-.148(tradeoff parameter that selects relative weighting of fitting smallest perturbation)A
109 272 :M
-.093(constraint equations versus smoothest/flattest constraint equations.  A value of 1)A
109 284 :M
-.11(uses only smoothest/flattest regularization; a value of 0 uses only smallest)A
109 296 :M
-.1(perturbation regularization. Any value between 0 and 1 inclusive is allowed.)A
41 308 :M
(sz)S
109 308 :M
-.131(relative importance of maintaining vertical smoothness/flatness versus horizontal)A
109 320 :M
-.117(smoothness/flatness \(a value of 0 eliminates any constraint on vertical)A
109 332 :M
-.073(smoothness/flatness\). Any value greater than or equal to 0 is valid.)A
41 344 :M
-.08(sedge)A
109 344 :M
-.13(weight on the smallest perturbation constraints applied to the cells at the edge of the)A
109 356 :M
-.094(model; this is usually necessary to prevent edge effects caused by smoothing from)A
109 368 :M
-.114(the interior of the model where there is ray coverage to the edges where there often is)A
109 380 :M
-.127(none \(a value of 0 eliminates any edge constraint\))A
41 392 :M
(smwz)S
109 392 :M
-.112(an array to allow variable weight of the smoothness/flatness regularization with)A
109 404 :M
-.12(depth.  The elements correspond to the cell depth level of the model sampled on the)A
109 416 :M
-.061(inverse grid from top to bottom, i.e. the dimensions of this array equal the)A
109 428 :M
-.119(dimension of the model in the z direction on the inverse grid \(a value of zero)A
109 440 :M
-.148(eliminates the constraint at that particular depth\).)A
41 452 :M
.246 .025(spwz )J
109 452 :M
-.134(an array to allow variable weight of the smallest perturbation regularization with)A
109 464 :M
-.12(depth.  The elements correspond to the cell depth level of the model sampled on the)A
109 476 :M
-.061(inverse grid from top to bottom, i.e. the dimensions of this array equal the)A
109 488 :M
-.119(dimension of the model in the z direction on the inverse grid \(a value of zero)A
109 500 :M
-.171(eliminates the constraint at that particular depth\))A
41 512 :M
-.064(florsm)A
109 512 :M
-.088(an array to select flatness \(1\) or smoothness \(2\) constraints at each depth of the)A
109 524 :M
-.124(model.  The elements correspond to the cell depth level of the model sampled on the)A
109 536 :M
-.061(inverse grid from top to bottom, i.e. the dimensions of this array equal the)A
109 548 :M
-.102(dimension of the model in the z direction on the inverse grid.)A
41 560 :M
-.245(interface)A
109 560 :M
-.15(apply the regularization only to cells below the interface specified in the file)A
109 572 :M
-.126(bathymetry \(1\))A
41 584 :M
-.131(kstart)A
109 584 :M
-.148(apply the regularization only to cells at least kstart cells below the interface specified)A
109 596 :M
-.158(in the file bathymetry if interface=1)A
41 621 :M
f5_10 sf
(  &invpar)S
41 633 :M
.003 0(          sz=0.2 alpha=0.9 sedge=10.)J
41 657 :M
(          smwz=35*1.)S
41 669 :M
(          spwz=35*1.)S
41 693 :M
(          florsm=35*2,)S
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 11 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(11)S
gR
gS 0 0 552 730 rC
41 33 :M
f5_10 sf
(          interface=1, kstart=0)S
41 45 :M
(  &end)S
41 0 4 730 rC
41 68 :M
f0_12 sf
12 f3_1 :p
3 :m
( )S
42 68 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 68 :M
f0_12 sf
12 f3_1 :p
161.001 :m
-.093(reset.in: input parameters for reset)A
41 92 :M
-.33(filei)A
113 92 :M
-.179(input velocity model file)A
41 104 :M
-.247(fileo)A
113 104 :M
-.172(output velocity model file)A
41 116 :M
-.247(fileb)A
113 116 :M
-.148(background velocity model file)A
41 128 :M
-.245(interface)A
109 128 :M
-.133(assign all nodes in output velocity model above interface specified in file)A
109 140 :M
-.088(\324bathymetry\325 to corresponding values in background model \(1\))A
41 152 :M
-.067(ibound)A
109 152 :M
-.09(apply velocity bounds to all model nodes, or only those below interface if)A
109 164 :M
-.094(interface=1.  The min and max bounds are specified in the arrays vmin and vmax for)A
109 176 :M
-.104(a node with a velocity in the background model specified in the array v0.  As an)A
109 188 :M
-.1(example, for the reset.in file supplied with the 3D example, a node with a velocity in)A
109 200 :M
-.016(the background model of 5.5 km/s will be bounded by values of 5.0 and 6.0 km/s.)A
41 212 :M
(v0)S
113 212 :M
-.13(an array containing velocities \(km/s\) that should cover the range contained in the)A
109 224 :M
-.073(background model \(must be monotonically increasing\). Used only if ibound=1)A
41 236 :M
-.223(vmin)A
113 236 :M
-.099(minimum velocity bounds \(km/s\) corresponding to background velocity values)A
109 248 :M
-.05(specified in the array v0. Used only if ibound=1)A
41 260 :M
-.22(vmax)A
113 260 :M
-.099(maximum velocity bounds \(km/s\) corresponding to background velocity values)A
109 272 :M
-.05(specified in the array v0. Used only if ibound=1)A
41 297 :M
f5_10 sf
(  &rspar)S
41 309 :M
(     interface=1, ibound=0)S
41 333 :M
.006 .001(     v0=  1.5,2.0,3.0,4.0,5.0,6.0,7.0,8.0,8.3)J
41 345 :M
.007 .001(     vmin=1.5,1.6,2.4,3.2,4.5,5.5,6.7,7.7,8.0)J
41 357 :M
.007 .001(     vmax=1.9,2.4,3.6,4.8,5.5,6.5,7.3,8.3,8.5)J
41 381 :M
(     filei='vel.new')S
41 393 :M
(     fileo='vel.new')S
41 405 :M
(     fileb='vel0')S
41 417 :M
(  &end)S
41 0 5 730 rC
41 440 :M
f0_12 sf
3 :m
( )S
43 440 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 440 :M
f0_12 sf
12 f3_1 :p
223.001 :m
-.12(select.in: input parameters for select2 or select3)A
41 464 :M
-.128(strfac)A
113 464 :M
-.131(the first value of the tradeoff parameter lambda to test at the beginning of each non-)A
109 476 :M
-.137(linear iteration \(except the first iteration\) is strfct*lbest where lbest is the lambda)A
109 488 :M
-.132(value used to create the best model from the previous iteration)A
41 513 :M
f5_10 sf
(  &selpar)S
41 525 :M
(     strfac=1.)S
41 537 :M
(  &end)S
41 0 5 730 rC
41 560 :M
f0_12 sf
3 :m
( )S
43 560 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 560 :M
f0_12 sf
12 f3_1 :p
224.001 :m
-.114(s.in: general input plotting parameters for zslice)A
41 584 :M
-.147(1\) pltpar namelist: plotting and misc parameters)A
41 608 :M
-.247(hfile)A
113 608 :M
-.102(name of the header file corresponding to the files to be plotted; \324for.header\325 or)A
109 620 :M
-.106(\324inv.header\325 may be used depending on whether the file is parameterized on the)A
109 632 :M
-.041(forward node-based or inverse cell-based grids.)A
41 644 :M
-.089(ibcol, ifcol)A
109 644 :M
-.041(background and foreground plot colors \(0 = white, 1 = black\))A
41 656 :M
-.25(iplot)A
109 656 :M
-.056(write the graphics to a postscript file \(0\), to the screen \(1\), or both \(2\))A
41 668 :M
1.02 .102(xwndow, ywndow)J
149 668 :M
-.073(size of graphics window \(mm\) in x and y directions)A
41 680 :M
-.197(icolor)A
113 680 :M
-.055(use color for the contours and shading \(1\))A
41 692 :M
-.065(icolneg, icolpos)A
149 692 :M
-.093(colors of the negative- and positive-valued contours and regions)A
41 704 :M
-.165(igrid)A
113 704 :M
-.101(plot the grid as mesh lines)A
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 12 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(12)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.245(interface)A
109 32 :M
-.145(plot trace of interface on vertical slices \(1\))A
41 44 :M
-.33(ifile)A
109 44 :M
-.187(name of interface file)A
41 56 :M
-.266(intcol)A
109 56 :M
-.153(color of interface)A
41 80 :M
-.147(2\) axepar namelist: plotting and misc parameters)A
41 104 :M
-.028(xmm, ymm, zmm)A
149 104 :M
-.069(length of the x, y and z axes \(mm\))A
41 116 :M
-.249(albht)A
149 116 :M
-.089(height of axes labels \(mm\); no effect on screen, only has effect in postscript)A
149 128 :M
-.329(file)A
41 153 :M
f5_10 sf
(  &pltpar)S
41 165 :M
(    hfile='for.header',)S
41 177 :M
.006 .001(    interface=1, ifile=\324bathymetry\325, intcol=2,)J
41 189 :M
(    ibcol=0, ifcol=1,)S
41 201 :M
(    iplot=1, icolor=1,)S
41 213 :M
(    xwndow=250., ywndow=155.)S
41 225 :M
(    icolneg=1, icolpos=1,)S
41 237 :M
(    icolneg=1, icolpos=3,)S
41 249 :M
(    igrid=0,)S
41 261 :M
(  &end)S
41 273 :M
(  &axepar)S
41 285 :M
.006 .001(    xmm=220.0, ymm=137.5, zmm=65.0, albht=2.5, xorig=12.,)J
41 297 :M
(  &end)S
41 0 5 730 rC
41 320 :M
f0_12 sf
12 f3_1 :p
3 :m
( )S
43 320 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 320 :M
f0_12 sf
12 f3_1 :p
220 :m
-.124(sfile.in: file specific input parameters for zslice)A
41 344 :M
-.139(After a line containing column headings, each line following contains a file name and related)A
41 356 :M
-.134(information for all available files to be plotted.)A
41 380 :M
-.223(int2)A
113 380 :M
-.109(real*4 \(0\) or integer*2 \(1\) file type)A
41 392 :M
-.109(cmin, cmax)A
109 392 :M
-.137(min and max contour value)A
41 404 :M
-.329(cinc)A
113 404 :M
-.164(contour increment)A
41 416 :M
-.195(scalef)A
113 416 :M
-.117(scale factor to be applied to values before plotting \(note that for \324fd##.times\325 time)A
109 428 :M
-.065(files, scalef=tmax/32766 should be used where tmax is the value used in the \324f.in\325)A
109 440 :M
-.058(input file when running the program fd\).)A
41 465 :M
f5_10 sf
.004 0(  file name   int2 cmin  cmax   cinc  scalef)J
41 477 :M
.003 0('vel.true'      1  1.5    7.0    .1   .001)J
41 489 :M
.002 0('vel0'          1  1.5    7.0    .1   .001)J
41 501 :M
.004 0('bathymetry'    0  1000.  1500.  50.  1.)J
41 513 :M
.003 0('fd01.times'    1  0.     13.    .2   4.578e-4)J
41 525 :M
.003 0('num.cell'      1  0.     1000.  10.0   1.)J
41 537 :M
.002 0('vel.mod'       1  1.5    7.0    .1   .001)J
41 549 :M
.003 0('diff.out'      1 -0.7    0.7    .1   .001)J
41 0 10 730 rC
41 575 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
46 575 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 575 :M
f1_14 sf
14 f2_1 :p
94 :m
4.528 .453(Response files)J
41 599 :M
f0_12 sf
.135 .014(The response files s0.rsp, zero1.rsp, s.rsp and regrid.rsp are used by programs when running the)J
41 611 :M
-.029(inversion script and should be left as is.  The response files gz.rsp and gy.rsp are to be used in)A
41 623 :M
-.106(conjunction with the gmt script files \324zplot\325 and \324yplot\325 described in the section on special files.)A
41 0 6 730 rC
41 647 :M
12 f3_1 :p
6 :m
(  )S
44 647 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 647 :M
f0_12 sf
12 f3_1 :p
155.001 :m
-.058(gz.rsp: response file for gmtslice)A
41 672 :M
f5_12 sf
-.227(diff.out)A
149 672 :M
f0_12 sf
-.197(- file name)A
41 685 :M
f5_12 sf
(z)S
149 685 :M
f0_12 sf
-.069(- slices parallel to z-axis \(use x for x axis or y for y axis\))A
41 698 :M
f5_12 sf
-.223(2 10.8 .8)A
149 698 :M
f0_12 sf
-.091(- min, max and increment of slice positions \(km\))A
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 13 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(13)S
gR
gS 0 0 552 730 rC
41 33 :M
f5_12 sf
-.227(43 25 29)A
149 33 :M
f0_12 sf
-.078(- number of nodes at which to sample file in x, y and z directions \(must)A
145 45 :M
-.146(divide evenly into length of model in each direction\))A
41 58 :M
f5_12 sf
-.264(.001)A
149 58 :M
f0_12 sf
-.151(- multiplier to apply to file values)A
41 71 :M
f5_12 sf
(0)S
149 71 :M
f0_12 sf
-.094(- if equal to 1, omit nodes that have no ray coverage according to \324num.cell\325)A
145 83 :M
-.082(file output by program ray if itomo=1 used in \325r.in\325 input file; num.cell must)A
145 95 :M
-.041(be resampled to forward grid using regrid < regrid_num.rsp)A
41 0 6 730 rC
41 119 :M
12 f3_1 :p
6 :m
(  )S
44 119 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 119 :M
f0_12 sf
12 f3_1 :p
156.001 :m
-.049(gy.rsp: response file for gmtslice)A
41 144 :M
f5_12 sf
-.231(vel.mod)A
149 144 :M
f0_12 sf
-.061(- see description of gz.rsp file above)A
41 157 :M
f5_12 sf
(y)S
41 169 :M
-.238(1 23 2)A
41 181 :M
-.227(43 25 36)A
41 193 :M
-.264(.001)A
41 205 :M
(0)S
41 0 6 730 rC
41 228 :M
f0_12 sf
6 :m
(  )S
44 228 :M
6 :m
(  )S
gR
gS 0 0 552 730 rC
41 228 :M
f0_12 sf
12 f3_1 :p
174 :m
-.044(gy.rsp: response file for gmtslice_2d)A
41 253 :M
f5_12 sf
-.227(diff.out)A
149 253 :M
-.287(- )A
f0_12 sf
-.224(file name)A
41 266 :M
f5_12 sf
-.238(151 25)A
149 266 :M
-.148(- )A
f0_12 sf
-.101(number of nodes at which to sample file in x and z directions \(must)A
145 278 :M
-.146(divide evenly into length of model in each direction\))A
41 291 :M
f5_12 sf
-.264(.001)A
149 291 :M
f0_12 sf
-.151(- multiplier to apply to file values)A
41 304 :M
f5_12 sf
(0)S
149 304 :M
f0_12 sf
-.094(- if equal to 1, omit nodes that have no ray coverage according to \324num.cell\325)A
145 316 :M
-.088(file output by program ray if itomo=1 used in the \325r.in\325 input file; num.cell)A
145 328 :M
-.041(must be resampled to forward grid using regrid_2d < regrid_num.rsp)A
41 0 10 730 rC
41 355 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
46 355 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 355 :M
f1_14 sf
14 f2_1 :p
134 :m
4.958 .496(Example directories)J
41 379 :M
f0_12 sf
-.105(Inside the 2D and 3D example directories everything is setup to run the inversion script \(you must)A
41 391 :M
-.126(compile all the programs first though for either the 2D or 3D problem and edit the path for the)A
41 403 :M
-.08(executables in the inversion scripts\).  The results of running the inversion for several different)A
41 415 :M
-.105(cases are contained in sub-directories called \324final#\325 where # ranges from 1 to 2 for the 2D problem)A
41 427 :M
-.088(and 1 to 8 for the 3D problem.  Postscript plots of the true models in each are contained in the sub-)A
41 439 :M
-.094(directory called \324true\325.  As provided, each directory is setup to create the results in the \324final1\325 sub-)A
41 451 :M
-.102(directory.  The final model plots and hit counts are for the models obtained on the 4th iteration,)A
41 463 :M
-.069(\324vel4\325.  For all runs, use 5 non-linear iterations and 5 lambda values for each iteration.)A
41 487 :M
-.098(For the 2D example, the true models consists of a high and low velocity anomaly with magnitudes)A
41 499 :M
-.062(of about 0.2 km/s with respect to a 1D background model.  Synthetic data for 99 shots were)A
41 511 :M
-.081(calculated and 25 ms of noise was added.  The \324final1\325 sub-directory contains results obtained by)A
41 523 :M
-.068(using only 7 of the shots and should take less than 5 minutes real time to run on a Sun SPARC)A
41 535 :M
-.063(Ultra 5.  The \324final2\325 sub-directory contains results obtained by using all 99 shots.  The \324final2\325)A
41 547 :M
-.102(directory contains more complete results files, including the hit counts \(\324num.cell\325\) and model plots)A
41 559 :M
-.053(without and with unsampled regions omitted \(yplot.ps and yplot2.ps respectively\).)A
41 583 :M
-.102(For the 3D example, the true model consists of a low velocity anomaly between 4 and 8 km depth)A
41 595 :M
-.073(with a magnitude of 0.5 km/s with respect to a 1D background model.  Synthetic data for 9 shots)A
41 607 :M
-.086(were calculated and 50 ms of noise was added.  The results in all 8 final sub-directories use all 9)A
41 619 :M
-.087(shots and only differ in the inversion parameters specified in the \324i.in\325 file used by the program)A
41 631 :M
-.099(inverse and contained in each sub-directory.  The \324final1\325 directory contains results obtained by)A
41 643 :M
-.094(using a reference set of parameter values to compare the results from the other 7 runs.  The \324final2\325)A
41 655 :M
-.087(directory shows the effect of removing the vertical smoothing. The \324final3\325 directory shows the)A
41 667 :M
-.103(effect of removing the smallest perturbation constraint. The \324final4\325 directory shows the effect of)A
41 679 :M
-.096(assigning equal weight to the smoothing and perturbation constraints \(big mistake for this)A
41 691 :M
-.1(example!\). The \324final5\325 directory shows the effect of removing the edge constraint \(another big)A
41 703 :M
-.077(mistake\). The \324final6\325 directory shows the effect of using too much weight on the edge constraint.)A
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 14 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(14)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.065(The \324final7\325 directory shows the effect of using flatness instead of smoothness constraints. The)A
41 44 :M
-.08(\324final8\325 directory shows the effect of using flatness constraints only between 4 and 8 km depth and)A
41 56 :M
-.12(with increased weighting relative to the smoothing constraints applied at shallower and deeper)A
41 68 :M
-.115(depths \(this is an attempt to force the anomaly outside of its actual depth range in the true model\).)A
41 80 :M
-.107(There is a great variation between the final models from the 8 cases, illustrating some of the non-)A
41 92 :M
-.097(uniqueness of the dataset.  The \324final1\325 directory contains more complete results files, including the)A
41 104 :M
-.064(hit counts \(\324num.cell\325\) and model plots without and with unsampled regions omitted \(yplot.ps,)A
41 116 :M
.121 .012(zplot.ps and yplot2.ps, zplot2.ps respectively\).)J
41 0 10 730 rC
41 143 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
46 143 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 143 :M
f1_14 sf
14 f2_1 :p
131.999 :m
3.523 .352(Creating 3D models)J
41 167 :M
f0_12 sf
-.087(To create a 3D model, for use as a starting model or a known model for a synthetic test, the first)A
41 179 :M
-.105(option is that in which the user does so by knowledge of the velocity model file format already)A
41 191 :M
-.079(described \(binary, integer*2 format in units of m/s\).  A second possibility is to use the utility)A
41 203 :M
-.042(program \324velbuild\325.  For this program, there are three options.  First, you can use a rayinvr model)A
41 215 :M
-.106(sampled on a uniform grid \(output file name will be \324fd.out\325\) as input and velbuild will extrapolate)A
41 227 :M
-.103(this model in the y direction, i.e. a 2D model with no lateral variation in the y direction.  To obtain)A
41 239 :M
-.112(this model from rayinvr use the following pltpar namelist parameters in the \324r.in\325 file for example:)A
167 263 :M
.589 .059(ifd=1, dxzmod=1, xmmin=0., xmmax=300.,)J
41 287 :M
-.116(Where dxzmod is the uniform node spacing \(km\) and xmmin and xmmax are the x limits of the)A
41 299 :M
-.118(model \(km\) that can be different from xmin and xmax.  The x and z limits of the model and the)A
41 311 :M
-.097(node spacing must be that same as specified in the \324for.header\325 file.  The file name must be)A
41 323 :M
-.053(changed to \325v.in\325 before running \324velbuild\325. The second option is to use two such models from)A
41 335 :M
-.126(rayinvr and velbuild will position these models at ymin and ymax of the 3D model and linearly)A
41 347 :M
-.075(interpolate between them.  The input file names in this case must \324v1.in\325 and \324v2.in\325.  The Third)A
41 359 :M
-.085(option is to use a velocity depth profile specified in a file named \324vel1d.in\325.  The \324vel1d.in\325 files for)A
41 371 :M
-.126(the 2D and 3D examples are contained in each directory provided.  There are 2 columns: depth)A
41 383 :M
-.106(\(km\) and velocity \(km/s\).  Make sure the maximum depth in \324vel1d.in\325 is at least zmax or a bit)A
41 395 :M
-.079(deeper.  The output file from velbuild is called \324vel.mod\325.)A
41 419 :M
-.081(The programs anomaly, anomaly3, anomaly4, anomaly5 and anomaly6 can be used to)A
41 431 :M
-.091(superimpose different types of velocity anomalies onto a \324pre-existing vel.mod\325 model.  The)A
41 443 :M
-.087(response file to run \324anomaly\325 for the 2D example is called \324a.rsp\325 in the directory provided.)A
41 455 :M
-.069(However, the model was smoothed to create the true model \(vel.true\).  The response file to run)A
41 467 :M
-.089(\324anomaly3\325 for the 3D example is called \324a3.rsp\325 in the directory provided.  This was used to create)A
41 479 :M
-.064(the true model \(vel.true\).)A
41 0 10 730 rC
41 506 :M
f1_14 sf
10 :m
1.429 .143(  )J
46 506 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 506 :M
f1_14 sf
14 f2_1 :p
193.999 :m
3.064 .306(Tips on running an inversion)J
41 530 :M
f0_12 sf
-.091(First, make sure the correct script file is used depending on whether it is a 2D or 3D problem and)A
41 542 :M
-.099(whether an interface is involved or not \(see description of script file \324inversion\325 in section on)A
41 554 :M
-.105(special files\).  Second, make sure the programs are all compiled with the correct parameter sizes)A
41 566 :M
-.115(for the problem at hand.  Be careful with the extra parameters that must be specified inside)A
41 578 :M
-.098(\324inverse\325 and \324inverse_2d\325 since if the inverse cell model is too finely sampled, the amount of array)A
41 590 :M
-.097(memory required may become too large to avoid swapping.  In this case, try increasing the cell size)A
41 602 :M
-.033(of the inverse grid.)A
41 626 :M
-.105(The inversion script is setup to iterate towards a model which provides a normalized RMS misfit of)A
41 638 :M
-.102(one \(chi-squared=1\).  It will not attempt to overfit the data for any iterations beyond that which)A
41 650 :M
-.121(initially finds the first model that provides a fit of one, but will effectively \322relax\323 the solution in)A
41 662 :M
-.122(the sense of finding the largest value of the tradeoff parameter lambda that provides a model with a)A
41 674 :M
-.087(misfit of one.  This should correspond to the smallest/smooth/flattest model possible \(depending)A
41 686 :M
-.118(on the type of regularization selected\).  Therefore the number of non-linear iterations can be set)A
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 15 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(15)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.132(quite large \(10 or more\) without concern since all models from each iteration are archived)A
41 44 :M
-.128(automatically along with the log files describing their fit.)A
41 68 :M
-.136(The maximum number of lambda values to test for each non-linear iteration should typically be)A
41 80 :M
-.123(between 4 and 8.  The lambda value will be decreased for each value tested according to the value)A
41 92 :M
-.095(of redfac in the input file \324l.in\325, until the normalized misfit falls below 1, in which case a bisection)A
41 104 :M
-.088(procedure begins to find the model with a misfit one.)A
41 128 :M
-.109(A fairly important parameter is lambda0 in the \324l.in\325 file.  For a new problem it is hard to predict)A
41 140 :M
-.116(what a suitable value is since it depends on the amount of data and type of regularization selected.)A
41 152 :M
-.121(The best approach is to make lambda0 rather large for an initial test run and see how the misfit)A
41 164 :M
-.098(drops \(if at all\) in the first iteration.  Large values of lambda0 might be 100-1000 depending on the)A
41 176 :M
-.083(problem.  Other than wasting time, using a large value of lambda0 should not cause a serious)A
41 188 :M
(problem.)S
41 212 :M
-.09(For most problems as a starting point, reasonable values to use for the parameters contained in the)A
41 224 :M
-.081(\324i.in\325 input file used by the programs \324inverse\325 and \324inverse_2d\325 that control the type of)A
41 236 :M
-.109(regularization are probably the values used for the first run in the 3D example provided \(results in)A
41 248 :M
-.098(the \324final1\325 sub-directory\) and given as the example in the section above on input files.  This means)A
41 260 :M
-.078(an alpha value near or equal to one, non zero values for sz and sedge, equal weighting with depth)A
41 272 :M
-.052(of the perturbation and smoothness/flatness constraints, and smoothness as opposed to flatness)A
41 284 :M
-.106(constraints.  One of the main ideas behind varying these parameter values is to allow exploration of)A
41 296 :M
-.114(model space and thereby gain some idea of what range of models adequately fit the data.)A
41 0 9 730 rC
41 323 :M
f1_14 sf
14 f2_1 :p
5 :m
1.5 .15( )J
45 323 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 323 :M
f1_14 sf
14 f2_1 :p
226.001 :m
3.247 .325(Plotting models with GMT scripts)J
41 347 :M
f0_12 sf
-.091(The GMT script files provided, yplot and zplot, are designed to show color vertical and horizontal)A
41 359 :M
-.079(slices through the models, respectively; for a 2D problem, only yplot is used and only one slice)A
41 371 :M
-.032(plotted.  Before running yplot, it necessary to run gmtslice < gy.rsp \(gmtslice_2d < gy.rsp for a)A
41 383 :M
-.095(2D problem\).  The model to be plotted must be in a file named \324vel.mod\325 \(otherwise, edit the first)A
41 395 :M
-.046(line of the gy.rsp response file\).  Before running zplot, it is necessary to run the program)A
41 407 :M
-.129(\324difference\325 to take the difference between the model of interest and the background model \(vel0\))A
41 419 :M
-.065(and thereby create a file called \322diff.out\325.  Then you must run gmtslice < gz.rsp.)A
41 443 :M
-.06(It is possible to omit regions of the model unsampled by raypaths.  As provided, the response files)A
41 455 :M
-.092(have a \3220\323 as their last line.  Referring to the description of the response files in the section above,)A
41 467 :M
-.106(this means the xyz slice files created by the programs \324gmtslice\325 or \324gmtslice_2d\325 and used by yplot)A
41 479 :M
-.097(and zplot will contain all model nodes regardless of whether they were sampled by a raypath.)A
41 491 :M
-.112(Setting the last line of the response files to \3221\323 means that the \324num.cell\325 will be used to omit any)A
41 503 :M
-.104(node from the xyz files that is not sampled by at least one ray.  The trick therefore is how to create)A
41 515 :M
-.106(the correct num.cell file for a particular model you want to plot?  Follow these steps: \(1\) copy the)A
41 527 :M
-.066(model of interest to the file \324vel.mod\325, \(2\) run the program \324fd\325 with the \324iout=1, itimes=0\325)A
41 539 :M
-.049(parameter combination in the \324f.in\325 file, \(3\) run \324zero < zero1.rsp\325, \(4\) run the program \324ray\325 with)A
41 551 :M
-.059(the \324iray=0, itomo=1, itrms=1\323 parameter combination in the \324r.in\325 file, \(5\) run regrid <)A
41 563 :M
-.017(regrid_num.rsp \(for 3D problems\) or regrid_2d < regrid_num.rsp \(for 2D problems\).  This should)A
41 575 :M
-.105(produce the correct \324num.cell\325 file needed before running gmtslice or gmtslice_2d.)A
41 0 9 730 rC
41 602 :M
f1_14 sf
5 :m
1.5 .15( )J
45 602 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 602 :M
f1_14 sf
14 f2_1 :p
282 :m
3.406 .341(Plotting models and other files with zslice)J
41 626 :M
f0_12 sf
-.13(The graphics program \324zslice\325 is intended to allow quick and simple interactive plotting of all of the)A
41 638 :M
-.095(3D \(or 2D\) model and data files that are created and used as part of the inversion.  In addition,)A
41 650 :M
-.139(zslice can be used to determine the exact data value of these files at specific nodes specified)A
41 662 :M
-.085(interactively with the mouse or by entering the x,y,z coordinates of the point. Also, the minimum)A
41 674 :M
-.118(and maximum value of each file and each slice through each 3D file is provided.  Therefore, zslice)A
41 686 :M
-.078(serves as a general purpose \324quality control\325 program while inversions are running as well as)A
41 698 :M
-.099(before and afterwards.  Any of the 3D/2D files parameterized on the forward grid can be plotted,)A
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 16 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(16)S
gR
gS 0 0 552 730 rC
41 32 :M
f0_12 sf
-.089(either integer*2 or real*4 files, and surfaces \(such as the file \324bathymetry\325\) can also be plotted.)A
41 44 :M
-.096(Only slices oriented normal to the x, y and z axes can be plotted.)A
41 68 :M
-.091(To use zslice, you must first list any file to be plotted in the file \324sfile.in\325 along with some other)A
41 80 :M
-.104(information described in the section on input files.  Running zslice then prints a menu of the file)A
41 92 :M
-.102(names and corresponding numbers; a file number must be selected.  The min and max value of the)A
41 104 :M
-.046(file is provided along with the x,y,z locations of these points.)A
41 128 :M
-.122(Then you are prompted for 3 values \(leave spaces/commas between each value\):)A
59 152 :M
-.131(first:)A
149 152 :M
-.053(enter \322x\323, \323y\323 or \322z\323 for a slice normal to one of these axes, e.g. for a)A
145 164 :M
-.184(horizontal slice enter \322z\323)A
59 176 :M
-.109(second:)A
145 176 :M
-.083(enter position of the slice \(km\), e.g. for a horizontal slice at 5 km enter \3225\323)A
59 188 :M
-.199(third:)A
145 188 :M
-.048(enter \3221\323, \3222\323 or \3223\323 for plot type where 1=contour plot, 2=shaded plot,)A
145 200 :M
-.095(3=combination of contour and shaded plot)A
41 224 :M
-.123(The shaded plot is very crude in that a dot is plotted at each node position with a diameter)A
41 236 :M
-.136(proportional to the data value at that node.  The maximum diameter of the dot is determined by the)A
41 248 :M
-.095(node spacing, and node values less than or equal to the cmin value listed in the \324sfile.in\325 file will)A
41 260 :M
-.139(have a diameter of zero and node values greater than or equal to the cmax value listed in the)A
41 272 :M
-.119(\324sfile.in\325 file will have maximum diameter, with a linear interpolation of diameters for node values)A
41 284 :M
-.109(between cmin and cmax.)A
41 308 :M
-.078(The min and max value of the slice is provided along with the x,y,z locations of the these points.)A
41 320 :M
-.072(You are then prompted for another slice.  When you want to stop looking at this file, enter \322s 0 0\323,)A
41 332 :M
-.132(and the file menu will again be printed and a new file may be selected or you can exit the program)A
41 344 :M
-.064(by entering \3220\323.)A
41 368 :M
-.097(There are a few special modes that zslice can run in.  If you want to pan through a series of parallel)A
41 380 :M
-.098(slices from one side of the model to the other, you enter for example \322z 9999 1\323 to look at)A
41 392 :M
-.083(horizontal slices using plot type 1 \(contours\).  You are then prompted for the spacing \(km\))A
41 404 :M
-.098(between successive slices.  Then you can pan through each slice by entering a return at the)A
41 416 :M
-.1(keyboard.  The position and min and max value of each slice are provided.  You can exit from the)A
41 428 :M
-.094(pan mode before going all the way through the model by entering \322s\323, at which point you will)A
41 440 :M
-.075(prompted for another slice.)A
41 464 :M
-.093(To extract the value of the data file at specific positions, there are two possibilities.  First, after)A
41 476 :M
-.112(plotting a particular slice that you want to examine, enter \322v 0 0\323.  Then use the mouse and click)A
41 488 :M
-.076(inside the slice plot and the x,y,z, position and corresponding data value will be provided for each)A
41 500 :M
-.107(position clicked.  Too exit this mode, click at a point outside the slice plot.  Alternatively, once in)A
41 512 :M
-.073(this mode, enter \322v\323 at the keyboard and with the mouse in the graphics window, and you will be)A
41 524 :M
-.087(prompted to enter x,y,z coordinates, and the value of the data file at that point will be provided.)A
41 536 :M
-.095(Enter \3220 0 0\323 to exit this mode.)A
41 560 :M
-.115(Note that for 3D problems, 2D interface files can be plotted using zslice, for example the file)A
41 572 :M
-.075(\322bathymetry\323.  In this case, enter \322z\323 for plot direction, \3220\323 for plot position, and whichever plot)A
41 584 :M
-.08(type.  Although you will get plots using other directions and positions, they will not be meaningful)A
41 596 :M
-.108(for an interface file.)A
41 0 14 730 rC
41 623 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
50 623 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 623 :M
f1_14 sf
14 f2_1 :p
96.001 :m
2.71 .271(Where to start)J
41 647 :M
f0_12 sf
-.076(The best way to learn how to use the programs is to run the examples provided.  To jump right to)A
41 659 :M
-.074(the examples as quickly as possible, follow the steps listed below:)A
41 683 :M
-.122(1\) Compile all the programs and put the executable in one directory \(as provided the array)A
55 695 :M
-.078(dimensions are setup for the 2D example; edit the \324.par\325 files in the \324fd\325, \324ray\325, \324xzslice\325 and)A
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Colin A. Zelt; page: 17 of 17)setjob
%%EndPageSetup
gS 0 0 552 730 rC
497 713 12 12 rC
497 722 :M
f0_12 sf
(17)S
gR
gS 0 0 552 730 rC
55 32 :M
f0_12 sf
-.086(\324misc\325 directories and the \324fd.com\325 file for the program fd if you want to run the 3D example\).)A
55 44 :M
-.108(Note that paths within the makefiles will also have to be set accordingly.)A
41 68 :M
-.124(2\) Edit the path to the executables in the \324inversion\325 script in each example directory.)A
41 92 :M
-.036(3\) Run the inversion script.)A
41 116 :M
-.076(4\) as the programs run, the log.file will be filled and it can be compared with the log.# files for)A
55 128 :M
-.116(each iteration in the \324final1\325 sub-directories for the 2D and 3D examples.  To run the other case)A
55 140 :M
-.065(for the 2D example, you have to edit the \324f.in\325 and \324r.in\325 files, and then compare results with)A
55 152 :M
-.085(those in the \324final2\325 sub-directory.  To run the other cases for the 3D example, you have to edit)A
55 164 :M
-.075(the \324i.in\325 file, and then compare results with those in the other final sub-directories.)A
41 188 :M
-.085(5\) use the programs \324gmtslice\325, \324gmtslice_2d\325 and the GMT scripts yplot, zplot to plot the \324vel4\325)A
55 200 :M
-.072(models and compare with the yplot.ps and zplot.ps files in the final sub-directories.  Note that)A
55 212 :M
-.122(you\325ll have to run the program \324difference\325 to take the difference between the models in \324vel4\325)A
55 224 :M
-.057(and \324vel0\325 before running the program \324gmtslice\325 using the gz.rsp response file.)A
41 0 11 730 rC
41 251 :M
f1_14 sf
14 f2_1 :p
10 :m
1.429 .143(  )J
47 251 :M
10 :m
1.429 .143(  )J
gR
gS 0 0 552 730 rC
41 251 :M
f1_14 sf
14 f2_1 :p
112 :m
3.892 .389(Known problems)J
41 275 :M
f0_12 sf
-.079(If you do not pad the model by at least a few nodes around all shot and receiver points, you may)A
41 287 :M
-.104(\322lose\323 raypaths by having them hit the side of the model.  This can be caused by velocity)A
41 299 :M
-.084(heterogeneities that force rays to bend out of plane.  Similarly, if the model is not deep enough,)A
41 311 :M
-.084(rays may hit the bottom of the model.  In either case, you\325ll probably want to pad the model more.)A
41 323 :M
-.124(You can monitor the number of rays that fail to make it back from the receivers to the shots in the)A
41 335 :M
(log files.)S
41 359 :M
-.061(When you compile some of the programs, you may get warning messages.  When some of the)A
41 371 :M
-.039(programs run, particularly ray, inverse, and regrid, you may get non-fatal error messages such as)A
41 383 :M
-.085(IEEE floating point exceptions.  I ignore all of these.)A
endp
%%Trailer
end
%%EOF
